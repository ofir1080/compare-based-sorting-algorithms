bubbleVsQuick:
הגרף הכחול מייצג מיון מסוג BoubbleSort על מערך אקראי. זמן הריצה של הפונציה הוא n^2,
וניתן לראות את הפרבולה.
הגרף האדום מייצג מיון מסוג QuickSort על מערך אקראי. זמן הריצה הוא nlog(n). ניתן לראות
שהגרף מתלכד עם nlog(n).


mergeVsQuick:
הגרף הכחול מייצג מיון מסוג MergeSort על מערך אקראי. זמן הריצה של הפונציה הוא nlog(n),
וניתן לראות שהוא מעט מעל nlog(n) (אולי בגלל מספר פעולות גבוה יחסית של האלגוריתם).

הגרף האדום מייצג מיון מסוג QuickSort על מערך אקראי. זמן הריצה הוא nlog(n). ניתן לראות
שהגרף מתחת לגרף אדום, בהתאם למה שלמדנו (ש-QuickSort הוא המיון הכי מהיר).


bubbleVsQuickOnSortedArray:
הגרף הכחול מייצג מיון מסוג BoubbleSort על מערך ממויין. ניתן לראות שהגרף לינארי (בזכות
הבדיקה שנדרשנו להוסיף במימוש, על מערך ממויין הוא מבצע n השוואות בלבד).

הגרף האדום מייצג מיון מסוג QuickSort על מערך ממויין. זמן הריצה הוא n^2. למדנו שהזמן
ריצה הגרוע ביותר על מיון מסוג זה הוא ריבועי, כאשר המערך ממויין מראש (כי תמיד האיבר הימני
יהיה האיבר הגדול ביותר).


arbitraryPivotVsMedianPivot:
הגרף הכחול מייצג מיון מסוג QuickSort ע"י בחירה של פיווט שיהיה מדיאן של האינדס הימני, השמאלי
והאמצעי. זמן הריצה הוא nlog(n). נשים לב שהוא קצת מעל nlog(n) כנראה בגלל פעולות קבועות מרובות.

הגרף האדום מייצג מיון מסוג QuickSort ע"י בחירה של פיווט להיות האיבר האחרון. כיפ שניתן לראות, זמן
הריצה הוא nlog(n).

*נשים לב שלמרות שמיון ע"י בחירת מדיאן אמור להיות יותר יעיל, במקרה שלנו זה לא קרה. ככל הנראה
הסינון הנ"ל לא אפקטיבי על המערכים שבדקנו, וריבוי הפועולות הקבועות מאט את הריצה (לכן
הגרף של הפיווט האחרון רץ מעט מהר יותר).

